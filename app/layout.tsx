import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { AuthProvider } from "./auth-provider";
import { getOrganizations } from "@/actions";
import { OrgSelector } from "./org-selector";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { getOrganization } = getKindeServerSession();
  const currentOrg = await getOrganization();
  const orgs = await getOrganizations();
  return (
    <AuthProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {currentOrg?.orgName && (
            <OrgSelector
              orgs={orgs as { code: string; name: string }[]}
              curretOrgName={currentOrg?.orgName}
            />
          )}

          {children}
        </body>
      </html>
    </AuthProvider>
  );
}
